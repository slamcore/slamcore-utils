[tool.poetry]
name = "slamcore_utils"
version = "0.1.2"
description = "SLAMcore SLAM Utilities"
authors = ["Nikos Koukis <nikolaos@slamcore.com>"]
license = "BSD License"
readme = "README.md"

homepage = "https://github.com/slamcore/slamcore_utils"
repository = "https://github.com/slamcore/slamcore_utils"
classifiers = [
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "License :: OSI Approved :: BSD License",
  "Operating System :: Unix",
]

[tool.poetry.dependencies]
python = ">=3.7,<3.11"
questionary = "^1.10.0"
numpy = "^1.21.4"
tqdm = { version = "^4.62.3", optional = true }

[tool.poetry.dev-dependencies]
pytest = "*"
black = { version = "*", allow-prereleases = true }
isort = "*"
mock = "*"
pdbpp = "^0.10.3"
mypy = "^0.910"
types-setuptools = "^57.4.4"
pyright = "^0.0.13"
pyfakefs = "^4.5.3"
pexpect = "^4.8.0"

[tool.poetry.scripts]
slamcore-convert-openloris = "slamcore_utils.scripts.convert_openloris:main"
slamcore-setup-dataset = "slamcore_utils.scripts.setup_dataset:main"

[tool.poetry.extras]
tqdm = ["tqdm"]

[tool.isort]
line_length = 95
include_trailing_comma = true
multi_line_output = 3

[tool.black]
line-length = 95
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'

[tool.mypy]
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["tqdm", "pytest", "pexpect"]
ignore_missing_imports = true

[tool.pyright]
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.8"
pythonPlatform = "Linux"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
